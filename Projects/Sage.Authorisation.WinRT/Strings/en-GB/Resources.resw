<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAuthorisationBusyException" xml:space="preserve">
    <value>The authorisation library is currently busy with another authorisation attempt.</value>
    <comment>The authorisation library is currently busy with another authorisation attempt.</comment>
  </data>
  <data name="ExceptionBrowserInsecurityException" xml:space="preserve">
    <value>A secure (TLS / SSL) connection with the Sage ID server could not be established.</value>
    <comment>A secure (TLS / SSL) connection with the Sage ID server could not be established.</comment>
  </data>
  <data name="ExceptionClientCredentialExpired" xml:space="preserve">
    <value>The client credential has expired.</value>
    <comment>The client credential has expired.</comment>
  </data>
  <data name="ExceptionCommunicationException" xml:space="preserve">
    <value>A network communication error has occured when trying to contact Sage ID. {0}</value>
    <comment>A network communication error has occured when trying to contact Sage ID. {0}</comment>
  </data>
  <data name="ExceptionCouldNotSetInternetOptions" xml:space="preserve">
    <value>Could not set internet options.</value>
    <comment>Could not set internet options.</comment>
  </data>
  <data name="ExceptionErrorResponseException" xml:space="preserve">
    <value>An error response for the authorisation attempt was returned from Sage ID.</value>
    <comment>An error response for the authorisation attempt was returned from Sage ID</comment>
  </data>
  <data name="ExceptionInsecurePath" xml:space="preserve">
    <value>An insecure path was specified.</value>
    <comment>An insecure path was specified.</comment>
  </data>
  <data name="ExceptionInvalidResponseExpectedFound" xml:space="preserve">
    <value>Invalid response received from Sage ID OAuth Service. Expected Found, received {0}.</value>
    <comment>Invalid response received from Sage ID OAuth Service. Expected Found, received {0}.</comment>
  </data>
  <data name="ExceptionInvalidResponseExpectedLocationHeader" xml:space="preserve">
    <value>Invalid response received from Sage ID OAuth Service. No redirect URI returned.</value>
    <comment>Invalid response received from Sage ID OAuth Service. No redirect URI returned.</comment>
  </data>
  <data name="ExceptionInvalidResponseExpectedOK" xml:space="preserve">
    <value>Invalid response received from Sage ID OAuth Service. Expected OK, received {0}.</value>
    <comment>Invalid response received from Sage ID OAuth Service. Expected OK, received {0}.</comment>
  </data>
  <data name="ExceptionSageAuthorisationException" xml:space="preserve">
    <value>A generic error has occured during the authorisation attempt.</value>
    <comment>A generic error has occured during the authorisation attempt.</comment>
  </data>
  <data name="ExceptionSecureStorage" xml:space="preserve">
    <value>An exception occured while starting secure storage. {0}.</value>
    <comment>An exception occured while starting secure storage. {0}.</comment>
  </data>
  <data name="ExceptionStorageOperation" xml:space="preserve">
    <value>An exception occured during a secure storage operation. {0}.</value>
    <comment>An exception occured during a secure storage operation. {0}.</comment>
  </data>
  <data name="LogBrowserActivated" xml:space="preserve">
    <value>Secure browser activated.</value>
    <comment>Secure browser activated.</comment>
  </data>
  <data name="LogBrowserNavigating" xml:space="preserve">
    <value>Browser navigating to {0}, TargetFrameName={1}.</value>
    <comment>Browser navigating to {0}, TargetFrameName={1}.</comment>
  </data>
  <data name="LogBrowserSecurityError" xml:space="preserve">
    <value>Browser security error detected.</value>
    <comment>Browser security error detected.</comment>
  </data>
  <data name="LogClearingClientCredential" xml:space="preserve">
    <value>Clearing client credential.</value>
    <comment>Clearing client credential.</comment>
  </data>
  <data name="LogClearStorage" xml:space="preserve">
    <value>Access token cache and secure storage at '{0}' has been cleared.</value>
    <comment>Access token cache and secure storage at '{0}' has been cleared.</comment>
  </data>
  <data name="LogClientCredentialFound" xml:space="preserve">
    <value>A valid client credential was found in the secure store. Serial={0}</value>
    <comment>A valid client credential was found in the secure store.</comment>
  </data>
  <data name="LogClientCredentialNotFound" xml:space="preserve">
    <value>A valid client credential was not found.</value>
    <comment>A valid client credential was not found.</comment>
  </data>
  <data name="LogExchangeAuthorisationCode" xml:space="preserve">
    <value>Exchanging authorisation code for tokens.</value>
    <comment>Exchanging authorisation code for tokens.</comment>
  </data>
  <data name="LogFoundCachedAccessToken" xml:space="preserve">
    <value>A valid cached access token has been found.</value>
    <comment>A valid cached access token has been found.</comment>
  </data>
  <data name="LogHttpException" xml:space="preserve">
    <value>An exception occured while performing a HTTP operation.</value>
    <comment>An exception occured while performing a HTTP operation.</comment>
  </data>
  <data name="LogHttpGetClientCredential" xml:space="preserve">
    <value>Beginning HTTP request to get client credential.</value>
    <comment>Beginning HTTP request to get client credential.</comment>
  </data>
  <data name="LogHttpGetClientCredentialComplete" xml:space="preserve">
    <value>Completed HTTP request to get client credential.</value>
    <comment>Completed HTTP request to get client credential.</comment>
  </data>
  <data name="LogHttpGetTokens" xml:space="preserve">
    <value>Beginning HTTP request to get tokens.</value>
    <comment>Beginning HTTP request to get tokens.</comment>
  </data>
  <data name="LogHttpGetTokensComplete" xml:space="preserve">
    <value>Completed HTTP request to get tokens.</value>
    <comment>Completed HTTP request to get tokens.</comment>
  </data>
  <data name="LogHttpStartAuthorisation" xml:space="preserve">
    <value>Beginning HTTP request to start authorisation attempt.</value>
    <comment>Beginning HTTP request to start authorisation attempt.</comment>
  </data>
  <data name="LogHttpStartAuthorisationComplete" xml:space="preserve">
    <value>Completed HTTP request to start authorisation attempt.</value>
    <comment>Completed HTTP request to start authorisation attempt.</comment>
  </data>
  <data name="LogInteractiveAuthentication" xml:space="preserve">
    <value>Starting interactive authentication.</value>
    <comment>Starting interactive authentication.</comment>
  </data>
  <data name="LogInvalidRefreshToken" xml:space="preserve">
    <value>The refresh token was rejected by the server. {0}</value>
    <comment>The refresh token was rejected by the server. {0}</comment>
  </data>
  <data name="LogLaunchSecureBrowser" xml:space="preserve">
    <value>Launching secure browser.</value>
    <comment>Launching secure browser.</comment>
  </data>
  <data name="LogPersistClientCredential" xml:space="preserve">
    <value>Persisting client credential.</value>
    <comment>Persisting client credential.</comment>
  </data>
  <data name="LogPersistValue" xml:space="preserve">
    <value>Persisting value {0} to secure storage.</value>
    <comment>Persisting value {0} to secure storage.</comment>
  </data>
  <data name="LogProxyServerSpecified" xml:space="preserve">
    <value>A web proxy server has been specified.</value>
    <comment>A web proxy server has been specified.</comment>
  </data>
  <data name="LogReadValue" xml:space="preserve">
    <value>Reading value {0} from secure storage.</value>
    <comment>Reading value {0} from secure storage.</comment>
  </data>
  <data name="LogRedirectUriFound" xml:space="preserve">
    <value>A redirect URI has been found. {0}.</value>
    <comment>A redirect URI has been found. {0}.</comment>
  </data>
  <data name="LogRefreshTokenFound" xml:space="preserve">
    <value>A valid refresh token was found in the secure store.</value>
    <comment>A valid refresh token was found in the secure store.</comment>
  </data>
  <data name="LogRefreshTokenNotFound" xml:space="preserve">
    <value>A valid refresh token was not found in the secure store.</value>
    <comment>A valid refresh token was not found in the secure store.</comment>
  </data>
  <data name="LogServerUpdatedScope" xml:space="preserve">
    <value>The server has updated the scope.</value>
    <comment>The server has updated the scope.</comment>
  </data>
  <data name="SecureBrowserTitle" xml:space="preserve">
    <value>Sage ID</value>
    <comment>Sage ID</comment>
  </data>
  <data name="LogResetDuration" xml:space="preserve">
    <value>Reset token duration flag specified. Removing cached access and refresh tokens.</value>
    <comment>Reset token duration flag specified. Removing cached access and refresh tokens.</comment>
  </data>
  <data name="ExceptionShieldedWebException" xml:space="preserve">
    <value>A web exception occured during a call to {0}.</value>
    <comment>A web exception occured during a call to {0}.</comment>
  </data>
  <data name="ExceptionInteractiveAuthorisationRequired" xml:space="preserve">
    <value>No cached access token was available and no valid refresh token was stored for the current client ID and scope which would allow the silent retrieval of a new access token.</value>
    <comment>No cached access token was available and no valid refresh token was stored for the current client ID and scope which would allow the silent retrieval of a new access token.</comment>
  </data>
  <data name="ExceptionClientInitialised" xml:space="preserve">
    <value>{0} cannot be modified after the first call to Authorise.</value>
    <comment>{0} cannot be modified after the first call to Authorise.</comment>
  </data>
  <data name="ExceptionCredentialNotFound" xml:space="preserve">
    <value>The expected client credential could not be found in the store.</value>
    <comment>The expected client credential could not be found in the store.</comment>
  </data>
  <data name="LogCorruptLockFile" xml:space="preserve">
    <value>The lock file is corrupt. It should be overwritten or deleted.</value>
    <comment>The lock file is corrupt. It should be overwritten or deleted.</comment>
  </data>
  <data name="ExceptionAuthorisationBusyException_SetConfiguration" xml:space="preserve">
    <value>Cannot set the configuration when an authorisation is in progress.</value>
    <comment>Cannot set the configuration when an authorisation is in progress.</comment>
  </data>
  <data name="LogResetTokenDuration" xml:space="preserve">
    <value>The client requested to reset the refresh token expiry</value>
  </data>
  <data name="LogAuthenticateUsingBroker" xml:space="preserve">
    <value>Beginning call to WebAuthenticationBroker to perform authorisation</value>
  </data>
  <data name="ExceptionHttpErrorInAuthenticationBroker" xml:space="preserve">
    <value>Sage ID returned an HTTP error code while the user was in the web authentication broker.</value>
  </data>
  <data name="ExceptionUserClosedAuthenticationBroker" xml:space="preserve">
    <value>The user closed the authentication broker before authorisation was complete</value>
  </data>
  <data name="LogAuthenticateUsingBrokerCompleted" xml:space="preserve">
    <value>Completed call to WebAuthenticationBroker to perform authorisation</value>
  </data>
  <data name="ExceptionTokenStoreHttpHelperNull" xml:space="preserve">
    <value>HttpHelper is null, use the other constructor to create an instance of TokenStore which can retrieve tokens</value>
  </data>
</root>